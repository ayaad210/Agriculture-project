@model Agriculture_projectv1.Models.Consulte

@{
    ViewBag.Title = "Create";
}

<br />
<div class="body-content container mrgt5">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>
            <h3>New Consulte </h3>
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-lg-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.GoverorenatId, htmlAttributes: new { @class = "control-label " })

                    @*@Html.EditorFor(model => model.GoverorenatId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownList("GoverorenatId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GoverorenatId, "", new { @class = "text-danger" })

                </div>
             </div>
                <div class="col-lg-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.SoilTypeId, "SoilTypeId", htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownList("SoilTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SoilTypeId, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="col-lg-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.AreaOfSoil, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.AreaOfSoil, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AreaOfSoil, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label " })
                        @Html.TextAreaFor(model => model.Notes, new { @class = "TextArea form-control", @style = "width:100%" })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12">

                    <div class="form-group">
                        <input type="submit" value="Save And Continue" class="btn btn-default" />
                    </div>

                </div>
            </div>
    }

        @Html.ActionLink("Back to List", "Index")
   
    </div>
<style>
    .TextArea {
        width: 100%;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>


        (function () {
            var x = document.getElementsByTagName("TextArea");
            for (var i = 0; i < x.length; i++) {
                x[i].removeAttribute("cols");
                x[i].removeAttribute("rows");
            }



        })();
    </script>
}
